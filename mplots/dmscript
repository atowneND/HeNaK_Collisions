#!/bin/bash 

###############
#FUNCTION DEFS#
###############

###############
# LIST OF FUN #
###############
# OLD
# singlem_plot
# singlem_plot_thetabins
# anglehist - - - - - - - - - number of transitions vs angle histogram
# dmhist  - - - - - - - - - - number of transitions vs dm histogram
###############
# UPDATED
# eststd  - - - - - - - - - - find standard deviation
# weightedanglehist - - - - - generate sum of sigma vs angle histogram
# weighteddmhist  - - - - - - generate sum of sigma vs dm histogram
# getbins2  - - - - - - - - - get upper and lower bounds of bins for angle histogram
# calcdtheta  - - - - - - - - calculate delta theta from m, mp, j, jp
# normalize_dtheta  - - - - - QM normalization for plotting and comparing QM/SC
# m0to0 - - - - - - - - - - - look at dthetas close to zero
# plotm0to0byjbar - - - - - - plots smallest nonzero angle vs jbar for all dj
# plotm0to0bydj - - - - - - - plots smallest nonzero angle vs dj for all jbar
###############
# NEEDS WORK
# dth_max - - - - - - - - - - plot the angle at maximum cross section vs jbar

###############
#    NOTES    #
###############
# raw data is in $datadir/jmp_j#_jp#_dj#.dat
# semiclassical data is in $scdatadir/th_j#_jp#_dj#.dat
# temporary file for plotting: $plotfile = plotme
#   - deleted at beginning of script and at the end of functions that use it
# temporary data file = $tmpfile tmp1
###############

############### 
singlem_plot(){
    j=28
    jp=32
    cat $fd | awk '$2=='$j'&&$4=='$jp' {print $1,$3,$6,$7}' >$tmp1file

    dj=$(awk 'BEGIN {print '$jp'-'$j'}')
    m=1
    pfile=tmp2
    pfile2=tmp3
    while [ $m -le $j ]; do
        rm $pfile $pfile2

        echo "#!/usr/local/gnuplot
        set term postscript eps enhanced
        fd='$pfile'
        " >$plotfile
        echo running m=$m

        cat $tmp1file | awk '$1=='$m'||$1==-'$m' {print ($2-$1), $4}' | awk '{n[$1]; \
            for(i=2;i<=NF;i++) a[$1,i]+=$i} END\
                {for(x in n){ printf "%s ",x; for(y=2;y<=NF;y++) \
                    printf "%s%s", a[x,y],(y==NF?ORS:FS)}\
                }' | sort -k 1 -n >$pfile

        awk '$1==0 {print $1,$2/2}' $pfile >> $pfile2
        awk '$1>0 {print $1,$2}' $pfile >> $pfile2
        totsum=$(awk '{sum=sum+$2}END{print sum}' $pfile2)
        ymax=$(awk 'BEGIN {max=0} {if(max<$2){max=$2}} END {print max}' $pfile)
        std=$(awk 'BEGIN {sum=0} {if(sum/'$totsum'<2/3)\
            {sum=sum+$2;thispoint=$1}}\
                END{print thispoint}' $pfile2)

        ofile=bym$m\_dj$dj\_dthetavsigma.ps
        echo "
        set ylabel '{/Symbol s}'
        set xlabel 'dm'
        set title 'dj=$dj,m=$m'
        plot fd with impulse
        replot '<echo $std $ymax' with impulse title 'std=$std'
        replot '<echo -$std $ymax' with impulse title ''
        set output '$ofile'
        replot
        ">>$plotfile
        gnuplot <$plotfile >/dev/null

        let m=m+1
        rm $plotfile
    done
}
###############

###############
singlem_plot_thetabins(){
    j=28
    jp=32
    cat $fd | awk '$2=='$j'&&$4=='$jp' {print $1,$3,$6,$7}' >$tmp1file

    dj=$(awk 'BEGIN {print '$jp'-'$j'}')
    m=0
    pfile=tmp2
    pfile2=tmp3
    rm $pfile $pfile2
    while [ $m -le $j ]; do
        echo running m=$m

        t=-180
        divfac=$(awk 'BEGIN {print 2*'$t'/'$wbin'}')
        N=0
        while [ $(awk 'BEGIN {print '$t'<180}') -eq 1 ] 2>/dev/null; do
            read lbin ubin <<<$(getbins2 $wbin $t $divfac)

            if [ $N -eq 0 ] ; then
                foo=$(awk '($1=='$m'||$1==-'$m')&&($3<='$ubin') {sum=sum+$4} END {print sum}' $tmp1file)
            else
                foo=$(awk '($1=='$m'||$1==-'$m')&&($3<='$ubin')&&($3>'$lbin') {sum=sum+$4} END {print sum}' $tmp1file)
            fi

            echo $foo | awk '$1==0||$1 {print ('$lbin'+'$ubin')/2,$1}' >>$pfile

            t=$ubin
            let N=N+1
        done
        cat $pfile | awk '{n[$1]; for(i=2;i<=NF;i++) a[$1,i]+=$i} END\
            {for(x in n){ printf "%s ",x; for(y=2;y<=NF;y++) \
                printf "%s%s", a[x,y],(y==NF?ORS:FS)}\
            }' | sort -k 1 -n >$pfile2

        rm stdfile
        awk '$1==0 {print $1,$2/2}' $pfile2 >stdfile
        awk '$1>0 {print $1,$2}' $pfile2 >>stdfile 
        totsum=$(awk '{sum=sum+$2}END{print sum}' stdfile)
        ymax=$(awk 'BEGIN {max=0} {if(max<$2){max=$2}} END {print max}' $pfile2)
        std=$(awk 'BEGIN {sum=0} {if(sum/'$totsum'<2/3)\
            {sum=sum+$2;thispoint=$1}}\
                END{print thispoint}' stdfile)

        ofile=m$m\_dj$dj\_dthetavsigma.ps
        echo "#!/usr/local/gnuplot
        set term postscript eps enhanced
        fd='$pfile2'
        set ylabel '{/Symbol s}'
        set xlabel '{/Symbol D}{/Symbol q}'
        set title 'dj=$dj,m=$m'
        plot fd u 1:2 with impulse
        replot '<echo $std $ymax' with impulse title 'std=$std'
        replot '<echo -$std $ymax' with impulse title ''
        set output '$ofile'
        replot
        ">>$plotfile

        gnuplot <$plotfile >/dev/null
        rm $plotfile
        let m=m+1
    done
}
###############

###############
anglehist(){
    dj=$(($jp-$j))
    infile=$datadir/jmp_j$j\_jp$jp\_dj$dj\.dat
    ofile=foofile
    pfile=thplotfile
    rm $ofile $pfile $plotfile 2>/dev/null
    sed '/#/d' $infile|awk '{t=$1/sqrt('$j'*('$j'+1));tp=$2/sqrt('$jp'*('$jp'+1));dt=atan2(sqrt(1-tp*tp),tp)-atan2(sqrt(1-t*t),t);print dt*180/3.141592654,$3}'|sed '/nan/d' >$ofile

    t=-180
    divfac=$(awk 'BEGIN {print 2*'$t'/'$wbin'}')
    N=0
    while [ $(awk 'BEGIN {print '$t'<180}') -eq 1 ] 2>/dev/null; do
        read lbin ubin <<<$(getbins2 $wbin $t $divfac)

        if [ $N -eq 0 ]; then
            foo=$(awk '($1<='$ubin') {count++} END {print count}' $ofile)
        else
            foo=$(awk '($1<='$ubin')&&($1>'$lbin') {count++} END {print count}' $ofile)
        fi

        t=$ubin
        let N=N+1
        echo $lbin\to$ubin $foo>>$pfile
    done

    opfile=test_hist_th_j$j\jp$jp\_dj$dj\.ps
    echo "set terminal postscript eps enhanced
    set style data histogram
    set xtic rotate -90
    set xlabel '{/Symbol D}{/Symbol q}'
    set ylabel 'sum of {/Symbol s}s'
    set title 'j=$j, jp=$jp'
    plot '$pfile' u 2:xtic(1)
    set output '$opfile'
    replot">>$plotfile

    gnuplot <$plotfile >deleteme1
    rm $ofile $pfile $plotfile 2>/dev/null
}
###############

###############
dmhist(){
    dj=$(($jp-$j))
    infile=$datadir/jmp_j$j\_jp$jp\_dj$dj\.dat
    ofile=dmdatfile
    pfile=dmplotfile
    rm $pfile $ofile $plotfile 2>/dev/null
    echo \#dm num_dm >$pfile
    sed '/#/d' $infile|awk '{print $2-$1,$3}'>$ofile

    for dm in $(awk '{print $1}' $ofile|awk '!seen[$0]++'); do
        ndm=$(awk '$1=='$dm' {count++} END {print count}' $ofile)
        echo $dm $ndm >>$pfile
    done

    opfile=test_hist_dm_j$j\jp$jp\_dj$dj\.ps
    echo "set terminal postscript eps enhanced
    set xlabel '{/Symbol D}m'
    set ylabel 'count'
    set title 'j=$j, jp=$jp'
    plot '$pfile' with impulse
    replot '$pfile' title ''
    set output '$opfile'
    replot">>$plotfile

    gnuplot <$plotfile >/dev/null 2>&1
    rm $pfile $ofile $plotfile 2>/dev/null
}
###############

###############
eststd(){
    # get datafile
    infile=$1
    tmp2file=tmp_j$j\jp$jp\.dat
    ofile=j$j\jp$jp\sorted.dat

    # sort data
    cat $infile | sed '/#/d' >$tmp2file

    # print out all angles greater than or equal to 0
    awk '$1==0 {print $1,$2/2}' $tmp2file >$ofile
    awk '$1>0 {print $1,$2}' $tmp2file >>$ofile
    totsum=$(awk '{sum=sum+$2}END{print sum}' $tmp2file) # sum of all cross sections
    std=$(awk 'BEGIN {sum=0} {if(sum/'$totsum'<1/3){sum=sum+$2;thispoint=$1}}\
        END {print thispoint}' $ofile)
    rm $tmp2file $ofile 2>/dev/null
    echo $std
}
###############

###############
weightedanglehist(){
    dj=$(($jp-$j))
    infile=$qmdatadir/qmth_j$j\_jp$jp\_dj$dj\.dat
    pfile=thplotfile
    scfile=$scdatadir/th_j$j\_jp$jp\_dj$dj\.dat
    rm $tmpfile $pfile $plotfile 2>/dev/null

    t=-180
    divfac=$(awk 'BEGIN {print 2*'$t'/'$wbin'}')
    N=0
    while [ $(awk 'BEGIN {print '$t'<180}') -eq 1 ] 2>/dev/null; do
        read lbin ubin <<<$(getbins2 $wbin $t $divfac)

        if [ $N -eq 0 ]; then
            foo=$(awk '($3<='$ubin') {sum=sum+$4} END {print sum}' $infile)
        else
            foo=$(awk '($3<='$ubin')&&($3>'$lbin') {sum=sum+$4} END {print sum}' $infile)
        fi

        t=$ubin
        tmean=$(awk 'BEGIN {print ('$lbin'+'$ubin')/2}')
        echo $foo | awk '$1==0||$1 {print '$tmean',$1}' >>$tmpfile
        let N=N+1
    done

    normalize_dtheta $tmpfile $pfile
    std=$(eststd $tmpfile)
    echo $jb $dj $std >>$stdfile
    ymax1=$(awk 'BEGIN {max=0} {if($2>max) max=$2} END {print max}' $pfile)
    ymax2=$(cat $scfile | sed '/#/d' | awk 'BEGIN {max=0} {if($2>max) max=$2} END {print max}')
    ymax=$(awk 'BEGIN {if('$ymax1'>'$ymax2'){print '$ymax1'}else{print '$ymax2'}}')

    #    opfile=ArHists/Ar_wth_j$j\jp$jp\_dj$dj\.ps
    echo "set terminal postscript eps enhanced
    set samples 10000
    set xlabel '{/Symbol D}{/Symbol q}'
    set xrange [-50:50]
    set ylabel 'sum of {/Symbol s}s'
    set title 'j=$j, jp=$jp'
    plot '$scfile' w lines smooth csplines title 'SC' linetype 1
    replot '$pfile' u 1:2 title 'QM' linetype 2
    #    replot '<echo \"$std $ymax\"' with impulse title 'QM standard deviation' linetype 2
    #    replot '<echo \"-$std $ymax\"' with impulse title '' linetype 2
    set output '$opfile'
    replot">>$plotfile

    gnuplot <$plotfile >deleteme1
    rm $tmpfile $pfile $plotfile 2>/dev/null
}
###############

###############
weighteddmhist(){
    dj=$(($jp-$j))
    infile=$qmdatadir/qmth_j$j\_jp$jp\_dj$dj\.dat
    ofile=dmdatfile
    pfile=dmplotfile
    rm $tmpfile $pfile $ofile $plotfile 2>/dev/null

    for dm in $(awk '{print $2-$1}' $infile|awk '!seen[$0]++'); do
        ndm=$(awk '($2-$1)=='$dm' {sum=sum+$4} END {print sum}' $infile)
        echo $dm $ndm >>$tmpfile
    done

    normalize_dtheta $tmpfile $pfile

    #    opfile=ArHists/Ar_wdm_j$j\jp$jp\_dj$dj\.ps
    echo "set terminal postscript eps enhanced
    set xlabel '{/Symbol D}m'
    set ylabel 'sum of {/Symbol s}s'
    set title 'j=$j, jp=$jp'
    plot '$pfile' u 1:2 with impulse
    replot '$pfile' u 1:2 title ''
    set output '$opfile'
    replot">>$plotfile

    gnuplot <$plotfile >/dev/null 2>&1
    rm $pfile $ofile $plotfile 2>/dev/null
}
###############

###############
getbins2(){
    #usage: read lbin ubin <<<$(getbins2 $wbin $t $divfac)
    wbin=$1
    t=$2
    divfac=$3

    ceilfac=$(awk 'BEGIN {print 180/'$wbin'}' | awk '{printf("%d\n",$0+=$0<0?0:0.9)}')
    if [ $t -eq -180 ] 2>/dev/null; then
        lbin=$(awk 'BEGIN {print -'$wbin'*'$ceilfac'-'$wbin'/2}')
    else
        lbin=$(awk 'BEGIN {print '$t'}')
    fi
    ubin=$(awk 'BEGIN {print '$lbin'+'$wbin'}')
    if [ $(awk 'BEGIN {print '$ubin'<-180}') -eq 1 ] 2>/dev/null; then
        lbin=$ubin
        ubin=$(awk 'BEGIN {print '$lbin'+'$wbin'}')
    elif [ $(awk 'BEGIN {print '$lbin'>180}') -eq 1 ] 2>/dev/null; then
        ubin=$lbin
    fi
#    if [ $(awk 'BEGIN {if('$ubin'<-180){print 1}else{print 0}}') -eq 1 ] 2>/dev/null; then
#        lbin=$ubin
#        ubin=$(awk 'BEGIN {print '$lbin'+'$wbin'}')
#    elif [ $(awk 'BEGIN {if('$lbin'>180){print 1}else{print 0}}') -eq 1 ] 2>/dev/null; then
#        ubin=$lbin
#    fi
    echo $lbin $ubin
}
###############

###############
calcdtheta(){
    dj=$(($jp-$j))
    indata=$datadir/jmp_j$j\_jp$jp\_dj$dj\.dat
    datoutfile=$qmdatadir/qmth_j$j\_jp$jp\_dj$dj\.dat
    # check rad2deg placement
    echo "#m mp dtheta sigma">$datoutfile

    cat $indata | sed '/#/d' | awk '{jex=$1/sqrt('$jp'*('$jp'+1)); jpex=$2/sqrt('$j'*('$j'+1));\
        t1ex=atan2(sqrt(1-jex*jex),jex); t2ex=atan2(sqrt(1-jpex*jpex),jpex);\
        t1appdeg=t1app*180/3.141592654;t2appdeg=t2app*180/3.141592654;t1exdeg=t1ex*180/3.141592654;t2exdeg=t2ex*180/3.141592654;\
        print $1,$2,t2exdeg-t1exdeg,$3}' >>$datoutfile
}
###############

###############
normalize_dtheta(){
    infile=$1
    ofile=$2
    totsum=$(awk '{sum=sum+$2*'$wbin'}END{print sum}' $infile)
    awk '{print $1,$2/'$totsum'}' $infile >$ofile
}
###############

###############
m0to0(){
    j=1
    dj=1
    jmax=50
    djmax=39
    outfile=m0to0.dat
    echo "#jb dj m mp dtheta sigma" >$outfile
    rm $tmpfile 2>/dev/null

    datadir=datfilesHe
    qmdatadir=archiveHe/qmthetasHe
    while [ $dj -lt $djmax ]; do
        echo running dj = $dj
        while [ $j -lt $(($jmax-$dj)) ]; do
            jp=$(($j+$dj))
            jbar=$(awk 'BEGIN {print ('$j'+'$jp')/2}')
            calcdtheta
            datfile=$qmdatadir/qmth_j$j\_jp$jp\_dj$dj\.dat
            cat $datfile | sed '/#/d' | sort -k 3 -n | grep -A 1 '^0 0 0 .[0-9]*\.[0-9]*'\
                | awk 'FNR==2{print '$jbar','$dj',$1,$2,$3,$4}' >>$tmpfile
            let j=j+1
        done
        let dj=dj+1
        j=1
    done
    cat $tmpfile | sort -k 5 -n >>$outfile
    rm $tmpfile
}
###############

###############
plotm0to0byjbar(){
    origfile=$1
    dj=1
    djmax=10
    rm $tmpfile $plotfile 2>/dev/null
    echo "#!/usr/local/gnuplot
    set samples 10000">$plotfile

    while [ $dj -lt $djmax ]; do
        outfile=changeme_dj$dj.dat
        cat $origfile | awk '$2=='$dj' {print $1,$2,$5}' | sort -k 1 -n >$outfile

        echo "
        f1='$outfile'
        f2='../He10/Stats/stats_dj$dj.dat'
        set term postscript eps enhanced
        set xrange [0:50]
        plot f1 u 1:3 w linespoints smooth csplines title 'dj=$dj'
        set xlabel 'jbar'; set ylabel '{/Symbol D}{/Symbol q}'
        set title 'Helium dj=$dj'
        set output 'He_theta_dj$dj.ps'
        replot
        ">>$plotfile
        
        gnuplot <$plotfile >/dev/null
        rm $plotfile
        let dj=dj+1
    done
}
###############

###############
plotm0to0bydj(){
    origfile=$1
    jbar=3.5
    jbarmax=45
    rm $tmpfile $plotfile 2>/dev/null
    echo "#!/usr/local/gnuplot
    set samples 10000">$plotfile

    while [ $(awk 'BEGIN {print '$jbar'<='$jbarmax'}') -eq 1 ]; do
        if [ "$jbar" -eq $jbar ] 2>/dev/null ; then
            jstr=$(awk 'BEGIN {printf("%dd0\n",'$jbar')}')
        else
            jstr=$(awk 'BEGIN {printf("%dd5\n",'$jbar')}')
        fi
        
        outfile=changeme_jbar$jstr.dat
        cat $origfile | awk '$1=='$jbar' {print $1,$2,$5}' | sort -k 2 -n >$outfile

        echo "
        f1='$outfile'
        set term postscript eps enhanced
        set xrange [0:$jbarmax]
        plot f1 u 2:3 w linespoints smooth csplines title 'jbar=$jbar'
        replot f1 u 2:3 title ''
        set xlabel 'dj'; set ylabel '{/Symbol D}{/Symbol q}'
        set title 'Helium jbar=$jbar'
        set output 'He_theta_jbar$jstr.ps'
        replot
        ">>$plotfile
        
        gnuplot <$plotfile >/dev/null 2>&1
        rm $plotfile
        jbar=$(awk 'BEGIN {print '$jbar'+0.5}')
    done
}
###############

###############
dth_max(){
    j=1
    dj=1
    jmax=50
    djmax=39
    outfile=dth_max.dat
    echo "#jb dj m mp dtheta sigma" >$outfile
    rm $tmpfile 2>/dev/null

    datadir=datfilesHe
    qmdatadir=archiveHe/qmthetasHe
    while [ $dj -lt $djmax ]; do
        echo running dj = $dj
        while [ $j -lt $(($jmax-$dj)) ]; do
            jp=$(($j+$dj))
            jbar=$(awk 'BEGIN {print ('$j'+'$jp')/2}')
            calcdtheta
            datfile=$qmdatadir/qmth_j$j\_jp$jp\_dj$dj\.dat
            echo $datfile
            cat $datfile | sed '/#/d' | sort -k 3 -n | awk 'BEGIN {print 0} 
#                {if($4>max){max=$4;m=$1;mp=$2;th=$3}} END
#                {print '$jbar','$dj',m,mp,th,max}' >>$tmpfile
            let j=j+1
            exit
        done
        let dj=dj+1
        j=1
    done
    cat $tmpfile | sort -k 5 -n >>$outfile
    rm $tmpfile
}
###############

###############
#  MY SCRIPT  #
###############
tmpfile=tmp1
plotfile=plotme
#m0to0
#dth_max
#exit
#plotm0to0bydj m0to0.dat
#plotm0to0byjbar m0to0.dat
#exit

rm $tmpfile $plotfile 2>/dev/null

datadir=datfilesHe
qmdatadir=qmthetasHe
scdatadir=scthetasHe
stdfile=stdHestats
histdir=halfHeHists
echo "#jbar dj std">$stdfile

wbin=0.5
djlist=(1 2 3 4 5 6 7 8 9 10)
jblist=(5 10 20 30 35)

echo Helium:
for jb in ${jblist[*]}; do
    for dj in ${djlist[*]}; do
        if [ $(($dj%2)) -eq 0 ]; then #even
            jdiff=$(($dj/2))
            j=$(($jb-$jdiff))
            jp=$(($jb+$jdiff))
        else
            jdiff=$(($dj/2))
            j=$(($jb-$jdiff))
            jp=$(($jb+$jdiff+1))
        fi
        if [ $j -ne 0 ]; then
            echo calculating for jbar=$jb, dj=$dj...
            opfile=$histdir/He_wth_j$j\jp$jp\_dj$dj\.ps

            calcdtheta

            weightedanglehist
            opfile=$histdir/He_wdm_j$j\jp$jp\_dj$dj\.ps
            weighteddmhist
        fi
    done
done

datadir=datfilesAr
qmdatadir=qmthetasAr
scdatadir=scthetasAr
stdfile=stdArstats
histdir=halfArHists
echo "#jbar dj std">$stdfile

echo Argon:
for jb in ${jblist[*]}; do
    for dj in ${djlist[*]}; do
        if [ $(($dj%2)) -eq 0 ]; then #even
            jdiff=$(($dj/2))
            j=$(($jb-$jdiff))
            jp=$(($jb+$jdiff))
        else
            jdiff=$(($dj/2))
            j=$(($jb-$jdiff))
            jp=$(($jb+$jdiff+1))
        fi
        if [ $j -ne 0 ]; then
            echo calculating for jbar=$jb, dj=$dj...
            opfile=$histdir/Ar_wth_j$j\jp$jp\_dj$dj\.ps

            calcdtheta

            weightedanglehist
            opfile=$histdir/Ar_wdm_j$j\jp$jp\_dj$dj\.ps
            weighteddmhist
        fi
    done
done

exit

################
#for jb in ${jblist[*]}; do
#    for dj in ${djlist[*]}; do
#        if [ $(($dj%2)) -eq 0 ]; then #even
#            jdiff=$(($dj/2))
#            j=$(($jb-$jdiff))
#            jp=$(($jb+$jdiff))
#        else
#            jdiff=$(($dj/2))
#            j=$(($jb-$jdiff))
#            jp=$(($jb+$jdiff+1))
#        fi
#
#        echo running \{$j,$jp\}
#        echo \#j=$j jp=$jp wbin=$wbin>>$savethdata
#        echo \#j=$j jp=$jp >>$savedmdata
#        anglehist
#        dmhist
#        weightedanglehist
#        weighteddmhist
#    infile=$datadir/jmp_j$j\_jp$jp\_dj$dj\.dat
#eststd
#        echo '' >>$savethdata
#        echo '' >>$savedmdata
#    done
#done
